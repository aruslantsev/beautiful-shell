__bs_default_config () {
	export _BS_SAVE_HISTORY=${_BS_SAVE_HISTORY:-0}
	export _BS_USE_COLORS=${_BS_USE_COLORS:-1}
	export _BS_SIMPLE_PROMPT=${_BS_SIMPLE_PROMPT:-0}
	export _BS_RUN_SSH_AGENT=${_BS_RUN_SSH_AGENT:-1}
	export _BS_SHOW_GIT_STATUS=${_BS_SHOW_GIT_STATUS:-1}
	export _BS_SHOW_CONDA_STATUS=${_BS_SHOW_CONDA_STATUS:-1}
	export _BS_SHOW_IDF_STATUS=${_BS_SHOW_IDF_STATUS:-1}
}

__bs_write_config () {
	echo -e "_BS_SAVE_HISTORY=${_BS_SAVE_HISTORY}\n_BS_USE_COLORS=${_BS_USE_COLORS}\n_BS_SIMPLE_PROMPT=${_BS_SIMPLE_PROMPT}\n_BS_RUN_SSH_AGENT=${_BS_RUN_SSH_AGENT}\n_BS_SHOW_GIT_STATUS=${_BS_SHOW_GIT_STATUS}\n_BS_SHOW_CONDA_STATUS=${_BS_SHOW_CONDA_STATUS}\n_BS_SHOW_IDF_STATUS=${_BS_SHOW_IDF_STATUS}" > ${_BS_PATH_PREFIX}/config
}

bs_config () {
	ans=""
	while [ "$ans" != "e" ] && [ "$ans" != "E" ]; do
		echo "Select an option"
		echo "1. Shell history"
		echo "2. Colors"
		echo "3. Prompt"
		echo "4. SSH agent"
		echo "5. Development tools"
		echo "S. Save configuration"
		echo "E. Exit"
		echo -n "> "
		read ans
		case $ans in
			"1")
				__bs_set_histcontrol
				;;
			"2")
				__bs_set_color
				;;
			"3")
				__bs_set_prompt
				;;
			"4")
				__bs_set_ssh_agent
				;;
			"5")
				__bs_set_devtools
				;;
			"S" | "s")
				__bs_write_config
				echo "Configuration saved"
				;;
		esac
	done
}

__bs_set_histcontrol () {
	echo "Enter 0 not to shell history, 1 to save shell history. Default value: 0. Current value: ${_BS_SAVE_HISTORY}."
	echo -n "> "
	read ans
	case $ans in
	"0")
		export _BS_SAVE_HISTORY=0
		;;
	"1")
		export _BS_SAVE_HISTORY=1
		;;
	*)
		echo "Invalid value"
	esac
}

__bs_set_color () {
	echo "Enter 0 to use B&W prompt and output, 1 to use colors. Default value: 1. Current value: ${_BS_USE_COLORS}."
	echo -n "> "
	read ans
	case $ans in
	"0")
		export _BS_USE_COLORS=0
		;;
	"1")
		export _BS_USE_COLORS=1
		;;
	*)
		echo "Invalid value"
	esac
}

__bs_set_prompt () {
	echo "Enter 0 to use multiline prompt, 1 to use simple prompt. Default value: 0. Current value: ${_BS_SIMPLE_PROMPT}."
	echo -n "> "
	read ans
	case $ans in
	"0")
		export _BS_SIMPLE_PROMPT=0
		;;
	"1")
		export _BS_SIMPLE_PROMPT=1
		;;
	*)
		echo "Invalid value"
	esac
}

__bs_set_ssh_agent () {
	echo "Enter 0 not to start ssh-agent after first login, 1 to start ssh-agent. Default value: 1. Current value: ${_BS_RUN_SSH_AGENT}."
	echo -n "> "
	read ans
	case $ans in
	"0")
		export _BS_RUN_SSH_AGENT=0
		;;
	"1")
		export _BS_RUN_SSH_AGENT=1
		;;
	*)
		echo "Invalid value"
	esac
}

__bs_set_devtools () {
	ans=""
	while [ "$ans" != "e" ] && [ "$ans" != "E" ]; do
		echo "Select an option"
		echo "1. GIT"
		echo "2. Miniconda/Anaconda"
		echo "3. ESP IDF"
		echo "E. Exit to previous menu"
		echo -n "> "
		read ans
		case $ans in
			"1")
				__bs_set_git_status
				;;
			"2")
				__bs_set_conda_status
				;;
			"3")
				__bs_set_esp_idf_status
				;;
		esac
	done
}

__bs_set_git_status () {
	echo "Enter 0 not to show git status (branch, staged files, etc.), 1 to show git status. Default value: 1. Current value: ${_BS_SHOW_GIT_STATUS}."
	echo -n "> "
	read ans
	case $ans in
	"0")
		export _BS_SHOW_GIT_STATUS=0
		;;
	"1")
		export _BS_SHOW_GIT_STATUS=1
		;;
	*)
		echo "Invalid value"
	esac
}

__bs_set_conda_status () {
	echo "Enter 0 not to show Miniconda/Anaconda environment, 1 to show Miniconda/Anaconda environment. Default value: 1. Current value: ${_BS_SHOW_CONDA_STATUS}."
	echo -n "> "
	read ans
	case $ans in
	"0")
		export _BS_SHOW_CONDA_STATUS=0
		;;
	"1")
		export _BS_SHOW_CONDA_STATUS=1
		;;
	*)
		echo "Invalid value"
	esac
}

__bs_set_esp_idf_status () {
	echo "Enter 0 not to show active ESP IDF version, 1 to show active ESP IDF version. Default value: 1. Current value: ${_BS_SHOW_IDF_STATUS}."
	echo -n "> "
	read ans
	case $ans in
	"0")
		export _BS_SHOW_IDF_STATUS=0
		;;
	"1")
		export _BS_SHOW_IDF_STATUS=1
		;;
	*)
		echo "Invalid value"
	esac
}
